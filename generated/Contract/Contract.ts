// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class EntrySet extends EthereumEvent {
  get params(): EntrySet__Params {
    return new EntrySet__Params(this);
  }
}

export class EntrySet__Params {
  _event: EntrySet;

  constructor(event: EntrySet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get digest(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get hashFunction(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get size(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get selfAttested(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get latest(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class EntryDeleted extends EthereumEvent {
  get params(): EntryDeleted__Params {
    return new EntryDeleted__Params(this);
  }
}

export class EntryDeleted__Params {
  _event: EntryDeleted;

  constructor(event: EntryDeleted) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get latest(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetDelegate extends EthereumEvent {
  get params(): SetDelegate__Params {
    return new SetDelegate__Params(this);
  }
}

export class SetDelegate__Params {
  _event: SetDelegate;

  constructor(event: SetDelegate) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Contract__getIPFSMultihashResult {
  value0: Bytes;
  value1: i32;
  value2: i32;

  constructor(value0: Bytes, value1: i32, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromFixedBytes(this.value0));
    map.set("value1", EthereumValue.fromI32(this.value1));
    map.set("value2", EthereumValue.fromI32(this.value2));
    return map;
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  getIPFSMultihash(_address: Address): Contract__getIPFSMultihashResult {
    let result = super.call("getIPFSMultihash", [
      EthereumValue.fromAddress(_address)
    ]);

    return new Contract__getIPFSMultihashResult(
      result[0].toBytes(),
      result[1].toI32(),
      result[2].toI32()
    );
  }

  try_getIPFSMultihash(
    _address: Address
  ): CallResult<Contract__getIPFSMultihashResult> {
    let result = super.tryCall("getIPFSMultihash", [
      EthereumValue.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new Contract__getIPFSMultihashResult(
        value[0].toBytes(),
        value[1].toI32(),
        value[2].toI32()
      )
    );
  }

  getDelegate(_address: Address): Address {
    let result = super.call("getDelegate", [
      EthereumValue.fromAddress(_address)
    ]);

    return result[0].toAddress();
  }

  try_getDelegate(_address: Address): CallResult<Address> {
    let result = super.tryCall("getDelegate", [
      EthereumValue.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getVersion(_address: Address): BigInt {
    let result = super.call("getVersion", [
      EthereumValue.fromAddress(_address)
    ]);

    return result[0].toBigInt();
  }

  try_getVersion(_address: Address): CallResult<BigInt> {
    let result = super.tryCall("getVersion", [
      EthereumValue.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreateEntryCall extends EthereumCall {
  get inputs(): CreateEntryCall__Inputs {
    return new CreateEntryCall__Inputs(this);
  }

  get outputs(): CreateEntryCall__Outputs {
    return new CreateEntryCall__Outputs(this);
  }
}

export class CreateEntryCall__Inputs {
  _call: CreateEntryCall;

  constructor(call: CreateEntryCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _digest(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _hashFunction(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _size(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateEntryCall__Outputs {
  _call: CreateEntryCall;

  constructor(call: CreateEntryCall) {
    this._call = call;
  }
}

export class SetDelegateCall extends EthereumCall {
  get inputs(): SetDelegateCall__Inputs {
    return new SetDelegateCall__Inputs(this);
  }

  get outputs(): SetDelegateCall__Outputs {
    return new SetDelegateCall__Outputs(this);
  }
}

export class SetDelegateCall__Inputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _delegate(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetDelegateCall__Outputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }
}

export class ClearEntryCall extends EthereumCall {
  get inputs(): ClearEntryCall__Inputs {
    return new ClearEntryCall__Inputs(this);
  }

  get outputs(): ClearEntryCall__Outputs {
    return new ClearEntryCall__Outputs(this);
  }
}

export class ClearEntryCall__Inputs {
  _call: ClearEntryCall;

  constructor(call: ClearEntryCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ClearEntryCall__Outputs {
  _call: ClearEntryCall;

  constructor(call: ClearEntryCall) {
    this._call = call;
  }
}

export class UpdateEntryCall extends EthereumCall {
  get inputs(): UpdateEntryCall__Inputs {
    return new UpdateEntryCall__Inputs(this);
  }

  get outputs(): UpdateEntryCall__Outputs {
    return new UpdateEntryCall__Outputs(this);
  }
}

export class UpdateEntryCall__Inputs {
  _call: UpdateEntryCall;

  constructor(call: UpdateEntryCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _digest(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _hashFunction(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _size(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class UpdateEntryCall__Outputs {
  _call: UpdateEntryCall;

  constructor(call: UpdateEntryCall) {
    this._call = call;
  }
}
